#!/bin/bash
# Sample/demo script for localhost-mdns environment
# This is a hand-crafted example, not generated by the framework

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Get the project root (parent of isle-cli)
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"
# Path to localhost-mdns directory
LOCALHOST_MDNS_DIR="$PROJECT_ROOT/mesh-prototypes/localhost-mdns"

# Check if localhost-mdns directory exists
if [ ! -d "$LOCALHOST_MDNS_DIR" ]; then
    echo "Error: localhost-mdns directory not found at $LOCALHOST_MDNS_DIR"
    exit 1
fi

# Change to localhost-mdns directory
cd "$LOCALHOST_MDNS_DIR" || exit 1

ACTION=${1:-help}
COMPOSE_FILE="docker-compose.lh-mdns.yml"

case $ACTION in
    up)
        echo "Starting localhost-mdns sample stack..."
        docker compose -f "$COMPOSE_FILE" up -d
        ;;
    down)
        echo "Stopping localhost-mdns sample stack..."
        docker compose -f "$COMPOSE_FILE" down
        ;;
    build)
        echo "Building localhost-mdns sample services..."
        docker compose -f "$COMPOSE_FILE" build
        ;;
    rebuild)
        echo "Rebuilding localhost-mdns sample..."
        docker compose -f "$COMPOSE_FILE" down
        docker compose -f "$COMPOSE_FILE" build
        docker compose -f "$COMPOSE_FILE" up -d
        ;;
    logs)
        SERVICE=${2:-}
        if [ -n "$SERVICE" ]; then
            echo "Viewing logs for $SERVICE..."
            docker compose -f "$COMPOSE_FILE" logs -f "$SERVICE"
        else
            echo "Viewing all localhost-mdns logs..."
            docker compose -f "$COMPOSE_FILE" logs -f
        fi
        ;;
    status)
        echo "localhost-mdns status:"
        docker compose -f "$COMPOSE_FILE" ps
        ;;
    restart)
        SERVICE=${2:-}
        if [ -n "$SERVICE" ]; then
            echo "Restarting $SERVICE..."
            docker compose -f "$COMPOSE_FILE" restart "$SERVICE"
        else
            echo "Restarting all services..."
            docker compose -f "$COMPOSE_FILE" restart
        fi
        ;;
    exec)
        SERVICE=${2:-backend}
        echo "Executing shell in $SERVICE..."
        docker compose -f "$COMPOSE_FILE" exec "$SERVICE" /bin/bash
        ;;
    help|*)
        echo "localhost-mdns sample environment (EXAMPLE PROJECT)"
        echo ""
        echo "Usage: isle sample localhost-mdns [action] [service]"
        echo ""
        echo "This is a hand-crafted demo/example environment for testing"
        echo "Isle Mesh concepts locally. It is NOT generated by the framework."
        echo ""
        echo "For the real mDNS system setup, use: isle mdns"
        echo ""
        echo "Actions:"
        echo "  up           - Start localhost-mdns stack in detached mode"
        echo "  down         - Stop localhost-mdns stack"
        echo "  build        - Build localhost-mdns images"
        echo "  rebuild      - Stop, rebuild, and restart services"
        echo "  logs [svc]   - View and follow logs (optionally for specific service)"
        echo "  status       - Show running containers"
        echo "  restart [svc]- Restart services (optionally specific service)"
        echo "  exec [svc]   - Execute bash in a service (default: backend)"
        echo "  help         - Show this help message"
        echo ""
        echo "Services:"
        echo "  backend   - Backend service (port 8100:8443)"
        echo "  frontend  - Frontend service (port 8080:8443)"
        echo "  proxy     - Mesh proxy (ports 443:443, 80:80)"
        ;;
esac
